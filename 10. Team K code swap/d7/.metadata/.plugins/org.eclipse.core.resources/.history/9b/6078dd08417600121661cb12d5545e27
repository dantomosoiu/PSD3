package uk.ac.glasgow.internman.impl;

import java.util.Date;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

import com.sun.xml.internal.ws.api.config.management.policy.ManagedServiceAssertion.ImplementationRecord;

import uk.ac.glasgow.internman.AdvertStore;
import uk.ac.glasgow.internman.Advertisement;
import uk.ac.glasgow.internman.Advertisement.AdvertisementStatus;
import uk.ac.glasgow.internman.Employer;
import uk.ac.glasgow.internman.InternMan;
import uk.ac.glasgow.internman.Internship;
import uk.ac.glasgow.internman.Role;
import uk.ac.glasgow.internman.Student;
import uk.ac.glasgow.internman.Visit;
import uk.ac.glasgow.internman.Visitor;
import uk.ac.glasgow.internman.advert.AdvertStoreImpl;
import uk.ac.glasgow.internman.advert.RoleImpl;
import uk.ac.glasgow.internman.offer.InternshipCon;
import uk.ac.glasgow.internman.offer.StudentCon;
import uk.ac.glasgow.internman.UoGGrade;
import uk.ac.glasgow.internman.users.User;
import uk.ac.glasgow.internman.users.UserStore;
import uk.ac.glasgow.internman.visit.VisitImpl;

/**
 * A stub class that implements the InternMan facade without providing any
 * actual functionality (except permitting logging in and out). The class should
 * be replaced by a real implementation once development begins.
 * 
 * @author Cowboy
 * 
 */
public class InternManStub implements InternMan {

	private UserStore users; 
	
	private User currentUser;
	
	public AdvertStore adds;
	
	public InternManStub(UserStore users){
		this.users = users;
		this.adds = new AdvertStoreImpl("advertFile");
	}
	
	@Override
	public boolean login(String userName, String password) {
		User user = users.getUser(userName, password);
		if (user != null){
			currentUser = user;
			return true;
		}
		else return false;
	}

	@Override
	public User getCurrentUser() {	
		return this.currentUser;
	}

	@Override
	public Map<Integer, Advertisement> getAdvertisements() {
		Map<Integer, Advertisement> adverts = new Hashtable();
		if (currentUser instanceof Student)
			for (Map.Entry<Integer, Advertisement> entry : adds.getAdverts().entrySet())
			{
				if (entry.getValue().getStatus().equals(AdvertisementStatus.PUBLISHED))
					adverts.put(entry.getKey(), entry.getValue());
			}
		else if (currentUser instanceof Employer)
			for (Map.Entry<Integer, Advertisement> entry : adds.getAdverts().entrySet())
			{
				if (entry.getValue().getEmployer().getName().equals(((Employer) currentUser).getName()))
					adverts.put(entry.getKey(), entry.getValue());
			}
		else if (currentUser instanceof Visitor)
			for (Map.Entry<Integer, Advertisement> entry : adds.getAdverts().entrySet())
			{
					adverts.put(entry.getKey(), entry.getValue());
			}
		
		return adverts;
	}

	@Override
	public Map<String, Student> getStudents() {
		return users.getStudents();
	}

	@Override
	public Employer registerNewEmployer(String name, String emailAddress) {
		if (currentUser instanceof Visitor){
			return users.addEmployer(name, emailAddress, name, name, emailAddress.concat("-emp"), name.concat("-pwd"));
		}

		return null;
	}

	@Override
	public Advertisement createNewAdvertisement(String applicationDetails) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Advertisement selectAdvertisement(Integer index) {
		return getAdvertisements().get(index);
	}

	@Override
	public Role selectRole(Integer advertisementIndex, Integer roleIndex) {
		return getAdvertisements().get(advertisementIndex).getRoles().get(roleIndex);
	}

	@Override
	public Student selectStudent(String matriculation) {
		if (currentUser instanceof Visitor)
			return users.getStudents().get(matriculation);
		else
			return null;
	}

	@Override
	public void publishAdvertisement(Integer advertisementIndex, String comment) {
		if( currentUser instanceof Visitor){
			adds.getAdvert(advertisementIndex).setComments(comment);
			adds.getAdvert(advertisementIndex).publish();
		}
	}

	@Override
	public void notifyAcceptedOffer(Role role, String managerName,
			String managerEmail) {
		if (currentUser instanceof Student){
			
		}
		
	}

	@Override
	public void approveAcceptedOffer(String matriculation) {
		if(currentUser instanceof Visitor){
			
		}
	}

	@Override
	public void assignAcademicVisitor(String matriculation, String visitorName) {
		if(currentUser instanceof Visitor){
			//InternshipCon i = new InternshipCon(manager, managerEmail, employer, visitComplete, role, status, visit)
		}
		
	}

	@Override
	public void recordVisitAssessment(String matriculation, UoGGrade grade,
			String description) {
		Visit v = VisitImpl();
		
	}

	@Override
	public Employer getCurrentEmployer() {
		return (Employer)currentUser;
	}

	@Override
	public Role createNewSelfSourcedRole(String title, String location,
			Date start, Date end, String description, Double salary) {
//		if (currentUser instanceof Student){
//			Role role = new RoleImpl(title, start, end, salary, false, location);
//			return role;
//		}
		return null;
		// TODO Auto-generated method stub

	}
}
